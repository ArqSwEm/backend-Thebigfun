package com.thebigfun.payment_service.model;import com.fasterxml.jackson.annotation.JsonFormat;import jakarta.persistence.*;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import java.time.LocalDateTime;@Data@AllArgsConstructor@NoArgsConstructor@Entity@Table(name = "payment_services")public class Payment {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @Column(name = "payment_id", unique = true, nullable = false)    private String paymentId; // Identificador único del pago    private Double amount;    private String currency;    @Enumerated(EnumType.STRING)    private PaymentStatus status;    private Boolean isActive = true; // Indica si el ticket está activo    @Column(name = "deletedAt", columnDefinition = "TIMESTAMP")    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm:ss")    private LocalDateTime deletedAt; // Fecha y hora de la "eliminación"    @Column(name = "user_id")    private Long userId; // User ID que actúa como propietario del pago    @Column(name = "booking_id")    private Long bookingId;    public enum PaymentStatus {        PENDING,        COMPLETED,        REJECTED    }    // Nuevos atributos para integración con blockchain    @Column(name = "transaction_hash")    private String transactionHash; // Hash de la transacción en la blockchain    @Column(name = "timestamp")    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm:ss")    private LocalDateTime timestamp; // Fecha y hora de la "eliminación"    @Column(name = "transfer_code", length = 255)    private String transferCode; // Código de transferencia (si es aplicable)    // Nuevos campos    private Long newOwnerId;    @Column(name = "newtransaction_hash")    private String newTransactionHash;    @Column(name = "transactionTimestamp")    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm:ss")    private LocalDateTime transactionTimestamp;    // Atributos adicionales para pasarelas de pago    @Column(name = "payment_method")    private String paymentMethod; // Método de pago utilizado    @Column(name = "payment_provider")    private String paymentProvider; // Proveedor de la pasarela de pago    @Column(name = "payment_status")    private String paymentStatus; // Estado del pago en la pasarela de pago    @Column(name = "receipt_url")    private String receiptUrl; // URL del recibo proporcionado por la pasarela de pago    @Column(name = "failure_message")    private String failureMessage; // Mensaje de error en caso de que la transacción falle}